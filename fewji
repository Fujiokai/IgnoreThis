local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local StarterGui = game:GetService("StarterGui")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local LocalPlayer = Players.LocalPlayer

local PushRemote = ReplicatedStorage:WaitForChild("RemoteEvents"):WaitForChild("PushPlayer")
local pushPower = 1000
local pushRadius = 20
local pushAngleThreshold = math.cos(math.rad(45))

local exemptUsers = {
    ["Venqtrix"] = true,
    ["GreasedUp_Monkey"] = true,
    ["FormedSteak8"] = true,
    ["UnorthodoxTheSecond"] = true
}

local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HRP = Character:WaitForChild("HumanoidRootPart")

local function blockForces(hrp)
    hrp.ChildAdded:Connect(function(child)
        if child:IsA("BodyVelocity") or child:IsA("VectorForce") or child:IsA("BodyForce") then
            print("Blocked force:", child.ClassName)
            child:Destroy()
        end
    end)
end

blockForces(HRP)

LocalPlayer.CharacterAdded:Connect(function(newChar)
    Character = newChar
    HRP = Character:WaitForChild("HumanoidRootPart")
    blockForces(HRP)
end)

local function pushNearbyPlayers()
    if not HRP then return end
    local lookVector = HRP.CFrame.LookVector
    local pushedSomeone = false

    for _, player in ipairs(Players:GetPlayers()) do
        if not exemptUsers[player.Name] and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local targetHRP = player.Character.HumanoidRootPart
            local offset = targetHRP.Position - HRP.Position
            local distance = offset.Magnitude

            if distance <= pushRadius then
                local directionToTarget = offset.Unit
                local dot = lookVector:Dot(directionToTarget)

                if dot >= pushAngleThreshold then
                    local direction = directionToTarget * pushPower
                    local success = PushRemote:InvokeServer(player, direction)

                    if success then
                        StarterGui:SetCore("SendNotification", {
                            Title = "Push",
                            Text = "You pushed " .. player.Name,
                            Duration = 2
                        })
                        pushedSomeone = true
                        break
                    end
                end
            end
        end
    end

    if not pushedSomeone then
        StarterGui:SetCore("SendNotification", {
            Title = "Failed",
            Text = "either cd or inactive",
            Duration = 2
        })
    end
end

UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == Enum.KeyCode.R then
        pushNearbyPlayers()
    end
end)

StarterGui:SetCore("SendNotification", {
    Title = "Faggot",
    Text = "Loaded!!!",
    Duration = 3
})
