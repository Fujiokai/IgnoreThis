local uis=game:GetService("UserInputService")
local p=game:GetService("Players")
local sg=game:GetService("StarterGui")
local rs=game:GetService("ReplicatedStorage")
local lp=p.LocalPlayer
local remote=rs:WaitForChild("RemoteEvents"):WaitForChild("PushPlayer")
local power=1000
local radius=20
local angle=math.cos(math.rad(45))
local char=lp.Character or lp.CharacterAdded:Wait()
local hrp=char:WaitForChild("HumanoidRootPart")
lp.CharacterAdded:Connect(function(c)
char=c
hrp=char:WaitForChild("HumanoidRootPart")
end)
local function push()
if not hrp then return end
local lv=hrp.CFrame.LookVector
local pushed=false
for _,plr in ipairs(p:GetPlayers()) do
if plr~=lp and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
local t=plr.Character.HumanoidRootPart
local o=t.Position-hrp.Position
local d=o.Magnitude
if d<=radius then
local dir=o.Unit
if lv:Dot(dir)>=angle then
local s=remote:InvokeServer(plr,dir*power)
if s then
sg:SetCore("SendNotification",{Title="Pushed",Text="You pushed "..plr.Name,Duration=2})
pushed=true
break
end
end
end
end
end
if not pushed then
sg:SetCore("SendNotification",{Title="Failed",Text="On cd or no active players",Duration=2})
end
end
uis.InputBegan:Connect(function(i,gp)
if not gp and i.KeyCode==Enum.KeyCode.R then
push()
end
end)
